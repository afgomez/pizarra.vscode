{
  "name": "Pizarra",
  "type": "dark",
  "colors": {
    "foreground": "#ffffffd8",

    // UI
    "focusBorder": "#314f78",

    "textLink.foreground": "#3586FF",

    "list.activeSelectionBackground": "#0a60ff",

    "list.invalidItemForeground": "#EF3E30",
    "list.errorForeground": "#FF7F75",
    "list.warningForeground": "#FFEC81",
    "gitDecoration.addedResourceForeground": "#9CDD2D",
    "gitDecoration.deletedResourceForeground": "#EF3E30",
    "gitDecoration.modifiedResourceForeground": "#95BFDD",

    "statusBar.background": "#407CA5",
    "statusBar.debuggingBackground": "#EE8C30",
    "statusBar.noFolderBackground": "#E469A7",

    // Workbench
    "activityBar.background": "#262626",
    "activityBar.border": "#ffffff19",
    "activityBar.inactiveForeground": "#ffffff7f",

    "activityBarBadge.background": "#EF3E30",

    "sideBar.background": "#1e1e1e",
    "sideBar.foreground": "#ffffffd8",
    "sideBar.border": "#ffffff19",
    "sideBarTitle.foreground": "#ffffff",
    "sideBarSectionHeader.foreground": "#ffffff",
    "sideBarSectionHeader.background": "#1e1e1e",
    "sideBarSectionHeader.border": "#ffffff19",

    "tab.activeForeground": "#ffffff",
    "tab.inactiveBackground": "#262626",
    "tab.inactiveForeground": "#ffffff7f",

    "editorGutter.background": "#171717",
    "editorLineNumber.foreground": "#ffffff3f",
    "editorLineNumber.activeForeground": "#ffffffd8",

    "editor.background": "#171717",
    "editor.foreground": "#ffffffd8",
    "editor.lineHighlightBackground": "#00000059",
    "editor.lineHighlightBorder": "#0000",

    "editorCursor.foreground": "#ffffff",
    "editorCursor.background": "#000000",

    // Indent lines
    "editorIndentGuide.background": "#ffffff19",
    "editorIndentGuide.activeBackground": "#ffffff3f",

    "editorGroup.emptyBackground": "#1e1e1e",

    // Selection
    "selection.background": "#314F78",
    "editor.selectionBackground": "#314F78",
    "editor.inactiveSelectionBackground": "#363636",
    "editor.selectionHighlightBackground": "#314F787f",
    "editor.wordHighlightBackground": "#314F78",
    "editor.wordHighlightStrongBackground": "#314F78",

    // Search & replace
    "editor.findMatchBackground": "#FFFF0B7F",
    "editor.findMatchBorder": "#FFFF0B",

    "editor.findMatchHighlightBackground": "#FFFF0B3F",
    "editor.findMatchHighlightBorder": "#FFFF0B7F",

    // Gutter
    "editorGutter.modifiedBackground": "#95BFDD",
    "editorGutter.deletedBackground": "#EF3E30",
    "editorGutter.addedBackground": "#9CDD2D",

    // Squiggles
    "editorError.foreground": "#EF3E30",
    "editorWarning.foreground": "#EED130",

    "panel.background": "#1e1e1e",
    "panel.border": "#ffffff19",
    "panelTitle.activeForeground": "#ffffff",
    "panelTitle.inactiveForeground": "#ffffff7f",

    // Terminal
    "terminal.background": "#171717",
    "terminal.foreground": "#ffffffd8",
    "terminalCursor.foreground": "#ffffff",

    "terminal.ansiBlack": "#000000",
    "terminal.ansiBrightBlack": "#515151",
    "terminal.ansiRed": "#EF3E30",
    "terminal.ansiBrightRed": "#FF7F75",
    "terminal.ansiGreen": "#9CDD2D",
    "terminal.ansiBrightGreen": "#C3F470",
    "terminal.ansiYellow": "#EED130",
    "terminal.ansiBrightYellow": "#FFEC81",
    "terminal.ansiBlue": "#407CA5",
    "terminal.ansiBrightBlue": "#95BFDD",
    "terminal.ansiMagenta": "#E469A7",
    "terminal.ansiBrightMagenta": "#FABADA",
    "terminal.ansiCyan": "#90C8DA",
    "terminal.ansiBrightCyan": "#C1E4F0",
    "terminal.ansiWhite": "#dcdcdc",
    "terminal.ansiBrightWhite": "#ffffff"
  },
  "tokenColors": [
    // Comments
    {
      "name": "Comment",
      "scope": ["comment", "punctuation.definition.comment"],
      "settings": {
        "foreground": "#ffffff3f"
      }
    },

    // Strings and chars
    {
      "name": "String",
      "scope": ["string"],
      "settings": {
        "foreground": "#9CDD2D"
      }
    },

    {
      "name": "Escape sequence",
      "scope": ["string constant.character.escape"],
      "settings": {
        "foreground": "#C3F470",
        "fontStyle": "italic"
      }
    },

    // String interpolation
    {
      "name": "Interpolation",
      "scope": [
        "punctuation.definition.template-expression",
        "punctuation.section.embedded"
      ],
      "settings": {
        "foreground": "#C3F470"
      }
    },

    {
      "name": "Embedded",
      "scope": ["meta.template.expression", "source meta.embedded"],
      "settings": {
        "foreground": "#ebeced"
      }
    },

    // Regexp
    {
      "name": "String",
      "scope": ["string.regexp"],
      "settings": {
        "foreground": "#93E0C5"
      }
    },

    // Constants:
    {
      "name": "Constant",
      "scope": [
        // numbers, booleans, ruby symbols, etc.
        "constant.numeric",
        "constant.language"
      ],
      "settings": {
        "foreground": "#E469A7"
      }
    },

    // `this` / `self`
    {
      "name": "this",
      "scope": [
        // Javascript
        "variable.language.this",

        // Ruby
        "variable.language.self",

        // Python
        "variable.language.special.self",
        "variable.parameter.function.language.special.self"
      ],
      "settings": {
        "foreground": "#fabada"
      }
    },

    // Keywords
    {
      "name": "Keyword",
      "scope": [
        // Generic
        "keyword",

        // Javascript: const, let, var, class, function keywords
        "storage.type",

        // JS/TS extends, implements, public
        "storage.modifier",

        // Python type annotations
        "punctuation.separator.annotation"
      ],
      "settings": {
        "foreground": "#EE8C30"
      }
    },

    // Identifiers: function, class and method names
    {
      "name": "Identifier",
      "scope": [
        // JS
        "meta.definition entity.name",
        "meta.class entity.name.type",

        // TS
        "meta.enum.declaration entity.name.type",
        "meta.interface entity.name.type",

        // Ruby
        "meta.class.ruby entity.name",
        "meta.module.ruby entity.name",
        "meta.function.method entity.name",

        // Python
        "meta.class.python entity.name",
        "meta.function.python entity.name",

        // SCSS
        "meta.at-rule.function support.function",
        "meta.at-rule.mixin entity.name",

        // SASS
        "support.function.name entity.name"
      ],
      "settings": {
        "foreground": "#EED130"
      }
    },

    // Types
    {
      "name": "Type",
      "scope": [
        // General
        "support.type",
        "meta.type.annotation",
        "meta.return.type",
        "meta.type entity.name.type",

        // Return
        "meta.return.type entity.name.type",
        "meta.return.type support.type",

        // Generics
        "meta.type.parameters entity.name.type",
        "meta.type.parameters punctuation.definition",

        // Python
        "support.type.python",
        "comment.typehint.type",
        "comment.typehint.punctuation"
      ],
      "settings": {
        "foreground": "#FFEC81"
      }
    },

    // Inheritance
    {
      "name": "Inherited class",
      "scope": [
        "entity.other.inherited-class",
        "meta.class entity.name.type.module",
        "meta.class punctuation.accessor"
      ],
      "settings": {
        "foreground": "#93E0C5",
        "fontStyle": "italic"
      }
    },

    // Decorators
    {
      "name": "Decorator",
      "scope": [
        "meta.function.decorator entity.name.function",
        "meta.function.decorator punctuation.definition",
        "meta.decorator entity.name.function",
        "meta.decorator punctuation.decorator",
        "meta.decorator meta.brace"
      ],
      "settings": {
        "foreground": "#93E0C5"
      }
    },

    // XML/HTML/JSX
    {
      "name": "XML Tag",
      "scope": ["entity.name.tag", "punctuation.definition.tag"],
      "settings": {
        "foreground": "#90C8DA"
      }
    },

    {
      "name": "HTML Attribute",
      "scope": [
        "entity.other.attribute-name",
        "meta.tag.attributes keyword.operator.assignment",
        "meta.tag.attributes punctuation.section.embedded"
      ],
      "settings": {
        "foreground": "#C1E4F0"
      }
    },

    // CSS/SCSS/SASS
    {
      "name": "CSS property name",
      "scope": ["support.type.property-name"],
      "settings": {
        "foreground": "#C1E4F0"
      }
    },

    {
      "name": "CSS vendor property name",
      "scope": ["support.type.vendored.property-name"],
      "settings": {
        "foreground": "#C1E4F0",
        "fontStyle": "italic"
      }
    },

    {
      "name": "CSS property value",
      "scope": [
        // Normal properties
        "support.constant.property-value",

        // Colors
        "support.constant.color",
        "constant.other.color",

        // Fonts
        "support.constant.font-name",

        // Funtions
        "meta.property-value support.function",

        // SCSS include/extend
        "meta.at-rule.include entity.name.function",
        "meta.at-rule.extend entity.other.attribute-name.placeholder"
      ],
      "settings": {
        "foreground": "#FFEC81"
      }
    },

    {
      "name": "CSS Selector: #id",
      "scope": ["entity.other.attribute-name.id"],
      "settings": {
        "foreground": "#FF7F75"
      }
    },

    {
      "name": "CSS Selector: .class",
      "scope": ["entity.other.attribute-name.class"],
      "settings": {
        "foreground": "#93E0C5"
      }
    },

    {
      "name": "CSS Selector: [attribute]",
      "scope": ["meta.attribute-selector", "meta.attribute-selector keyword"],
      "settings": {
        "foreground": "#C1E4F0"
      }
    },

    {
      "name": "CSS Important",
      "scope": ["keyword.other.important"],
      "settings": {
        "foreground": "#EF3E30"
      }
    },

    // SCSS: Extend declaration
    {
      "name": "SCSS Extend",
      "scope": ["entity.other.attribute-name.placeholder"],
      "settings": {
        "foreground": "#EED130"
      }
    },

    // SCSS: reference
    {
      "name": "SCSS Reference",
      "scope": ["meta.property-list entity.name.tag.reference"],
      "settings": {
        "foreground": "#FABADA"
      }
    },

    // Markdown
    {
      "name": "Markup heading",
      "scope": ["markup.heading"],
      "settings": {
        "foreground": "#ffffff",
        "fontStyle": "bold"
      }
    },

    {
      "name": "Markup bold",
      "scope": ["markup.bold"],
      "settings": {
        "foreground": "#ffffff",
        "fontStyle": "bold"
      }
    },

    {
      "name": "Markup italic",
      "scope": ["markup.italic"],
      "settings": {
        "foreground": "#ffffff",
        "fontStyle": "italic"
      }
    },

    {
      "name": "Markup monospace",
      "scope": ["markup.raw", "markup.inline.raw"],
      "settings": {
        "foreground": "#ffffff"
      }
    },

    {
      "name": "Markup fenced code",
      "scope": ["markup.fenced_code punctuation.definition"],
      "settings": {
        "foreground": "#ffffff"
      }
    },

    // JSDoc
    {
      "name": "JSDoc: keyword",
      "scope": ["comment storage.type"],
      "settings": {
        "foreground": "#FF7F75"
      }
    },
    {
      "name": "JSDoc: type",
      "scope": ["comment entity.name.type"],
      "settings": {
        "foreground": "#FFEC81"
      }
    },
    {
      "name": "JSDoc: variable",
      "scope": ["comment variable.other"],
      "settings": {
        "foreground": "#ebeced"
      }
    },

    // TODO/FIXME - Depends on vscode-language-todo
    {
      "name": "TODO",
      "scope": [
        // python
        "comment keyword.codetag.notation",

        // vscode-language-todo
        "comment storage.type.class.todo",
        "comment storage.type.class.fixme",
        "comment storage.type.class.changed",
        "comment storage.type.class.xxx",
        "comment storage.type.class.idea",
        "comment storage.type.class.hack",
        "comment storage.type.class.note",
        "comment storage.type.class.review",
        "comment storage.type.class.nb",
        "comment storage.type.class.bug",
        "comment storage.type.class.question",
        "comment storage.type.class.combak",
        "comment storage.type.class.temp",
        "comment storage.type.class.debug",
        "comment storage.type.class.optimize"
      ],
      "settings": {
        "foreground": "#407CA5",
        "fontStyle": "italic"
      }
    }
  ]
}
